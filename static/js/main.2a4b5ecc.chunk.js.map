{"version":3,"sources":["criptomonedas.png","componentes/Error.js","hooks/useMoneda.js","hooks/useCriptomoneda.js","componentes/Formulario.js","componentes/Cotizacion.js","componentes/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["MensajeError","styled","p","Error","mensaje","Label","label","Select","select","useMoneda","stateInicial","opciones","useState","state","actualizarState","onChange","e","target","value","map","opcion","codigo","nombre","useCriptomoneda","CoinInfo","Name","FullName","Id","Boton","input","Formulario","guardarMoneda","guardarCriptomoneda","listacripto","guardarCriptomonedas","error","guardarError","moneda","SelectMonedas","criptomoneda","SelectCripto","useEffect","a","Axios","get","resultado","data","Data","consultarAPI","onSubmit","preventDefault","type","ResultadoDIV","div","Info","Precio","Cotizacion","Object","keys","length","console","log","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","class","Contenedor","Imagen","img","Heading","h1","App","guardarResultado","cargando","guardarCargando","url","axios","setTimeout","DISPLAY","cotizarCriptomoneda","componente","src","imagen","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a4b5ecc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/criptomonedas.e012a136.png\";","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst MensajeError = styled.p`\n    background-color: #b7322c;\n    padding: 1rem;\n    color: #FFF;\n    font-size: 30px;\n    text-transform: uppercase;\n    font-weight: bold;\n    text-align: center;\n    font-family: 'Bebas Neue', cursive;\n\n\n`\n\nconst Error = ({mensaje}) => {\n    return ( \n        <MensajeError> {mensaje} </MensajeError>\n     );\n}\n \nexport default Error;","import React, { Fragment, useState } from 'react';\nimport styled from '@emotion/styled';\n\nconst Label = styled.label`\n    font-family: 'Bebas Neue', cursive;\n    color: #FFF;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 2.4rem;\n    margin-top: 2rem;\n    display: block;\n`\n\nconst Select = styled.select`\n    width: 100%;\n    display: block;\n    padding: 1rem;\n    -webkit-appearance: none;\n    border-radius: 10px;\n    border: none;\n    font-size: 1.2rem;\n`\n\nconst useMoneda = (label, stateInicial, opciones) => {\n\n    // State de nuestro custom hook\n\n    const [state, actualizarState] = useState('');\n\n    const Seleccionar = () => (\n        <Fragment>\n            <Label> { label } </Label>\n            <Select\n                onChange={ e => actualizarState(e.target.value)}\n                value={state}\n            >\n                <option value=\"\">-- Seleccionar --</option>\n                {opciones.map(opcion => (\n                    <option key={opcion.codigo} value={opcion.codigo}>{opcion.nombre}</option>\n                ))}\n            </Select>\n        </Fragment>\n    );\n\n    // Retornar state, interfaz y fn que modifica el state\n    return [state, Seleccionar, actualizarState]\n\n\n}\n\nexport default useMoneda;","import React, { Fragment, useState } from 'react';\nimport styled from '@emotion/styled';\n\nconst Label = styled.label`\n    font-family: 'Bebas Neue', cursive;\n    color: #FFF;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 2.4rem;\n    margin-top: 2rem;\n    display: block;\n`\n\nconst Select = styled.select`\n    width: 100%;\n    display: block;\n    padding: 1rem;\n    -webkit-appearance: none;\n    border-radius: 10px;\n    border: none;\n    font-size: 1.2rem;\n`\n\nconst useCriptomoneda = (label, stateInicial, opciones) => {\n\n    // console.log(opciones)\n\n    // State de nuestro custom hook\n\n    const [state, actualizarState] = useState('');\n\n    const SelectCripto = () => (\n        <Fragment>\n            <Label> { label } </Label>\n            <Select\n                onChange={ e => actualizarState(e.target.value)}\n                value={state}\n            >\n                <option value=\"\">-- Seleccionar --</option>\n                {opciones.map(opcion => (\n                    <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>\n                        {opcion.CoinInfo.FullName}\n                    </option>\n                ))}\n            </Select>\n        </Fragment>\n    );\n\n    // Retornar state, interfaz y fn que modifica el state\n    return [state, SelectCripto, actualizarState];\n\n\n}\n\nexport default useCriptomoneda;\n\n","import React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\n\nimport Error from './Error';\nimport useMoneda from '../hooks/useMoneda';\nimport useCriptomoneda from '../hooks/useCriptomoneda';\nimport Axios from 'axios';\n\nconst Boton = styled.input`\n    margin-top: 20px;\n    font-weight: bold;\n    font-size: 20px;\n    padding: 10px;\n    background-color: #66A2FE;\n    border: none;\n    width: 100%;\n    border-radius: 10px;\n    color: #FFF;\n    transition: background-color .3s ease;\n\n    &:hover {\n        background-color: #326AC0;\n        cursor: pointer;\n    }\n`\n\nconst Formulario = ({guardarMoneda, guardarCriptomoneda}) => {\n\n    // State del listado de Criptomonedas\n\n    const [listacripto, guardarCriptomonedas] = useState([]);\n    const [error, guardarError] = useState(false);\n\n    \n    const MONEDAS = [\n        {codigo: 'USD', nombre: 'Dolar de Estados Unidos'},\n        {codigo: 'MXN', nombre: 'Peso Mexicano'},\n        {codigo: 'EUR', nombre: 'Euro'},\n        {codigo: 'GBP', nombre: 'Libra Esterlina'},\n        {codigo: 'ARS', nombre: 'Peso Argentino'}\n    ];\n    \n    // Utilizar useMoneda\n\n    const [ moneda, SelectMonedas ] = useMoneda('Elige tu moneda', '', MONEDAS);\n\n    // Utilizar useCriptomoneda\n\n    const [ criptomoneda, SelectCripto] = useCriptomoneda('Elige tu criptomoneda', '', listacripto);\n    \n    // Ejecutar llamado a la API\n\n    useEffect(() => {\n        const consultarAPI = async () => {\n            const url = 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD';\n\n            const resultado = await Axios.get(url);\n\n            guardarCriptomonedas(resultado.data.Data);\n        }\n\n        consultarAPI();\n\n    }, []);\n\n    // Cuando el usuario hace submit\n\n    const cotizarMoneda = e => {\n        e.preventDefault();\n\n        // validar si ambos campos estan llenos\n        if(moneda === '' || criptomoneda === '') {\n            guardarError(true);\n            return;\n        }\n\n        // pasar los datos al componente principal\n\n        guardarError(false);\n        guardarMoneda(moneda);\n        guardarCriptomoneda(criptomoneda);\n    }\n\n    return ( \n        \n        <form\n            onSubmit={cotizarMoneda}\n        >\n            {error ? <Error mensaje=\"todos los campos son obligatorios\" /> : null}\n\n            <SelectMonedas />\n\n            <SelectCripto />\n\n            <Boton \n                type=\"submit\"\n                value=\"Calcular\"\n            />\n        </form>\n     );\n}\n \nexport default Formulario;","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst ResultadoDIV = styled.div`\n    color: #FFF;\n    font-family: Arial, Helvetica, sans-serif;\n`;\n\nconst Info = styled.p`\n    font-size: 18px;\n\n    span {\n        font-weight: bold;\n    }\n`;\n\nconst Precio = styled.p`\n    font-size: 30px;\n    span {\n        font-weight: bold;\n    }\n`;\n\n\nconst Cotizacion = ({resultado}) => {\n    if(Object.keys(resultado).length === 0) return null;\n\n    console.log(resultado);\n\n    return ( \n        <ResultadoDIV>\n            <Precio>El precio es: <span>{resultado.PRICE}</span></Precio>\n            <Info>Precio más alto del día: <span>{resultado.HIGHDAY}</span></Info>\n            <Info>Precio más bajo del día:<span>{resultado.LOWDAY}</span></Info>\n            <Info>Variación 24hs: <span>{resultado.CHANGEPCT24HOUR}</span></Info>\n            <Info>Última actualización: <span>{resultado.LASTUPDATE}</span></Info>\n        </ResultadoDIV>\n     );\n}\n \nexport default Cotizacion;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div class=\"sk-chase\">\n            <div class=\"sk-chase-dot\"></div>\n            <div class=\"sk-chase-dot\"></div>\n            <div class=\"sk-chase-dot\"></div>\n            <div class=\"sk-chase-dot\"></div>\n            <div class=\"sk-chase-dot\"></div>\n            <div class=\"sk-chase-dot\"></div>\n        </div>\n    );\n}\n\nexport default Spinner;","import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport axios from 'axios';\nimport imagen from './criptomonedas.png';\nimport Formulario from './componentes/Formulario';\nimport Cotizacion from './componentes/Cotizacion';\nimport Spinner from './componentes/Spinner';\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width:992px) {\n    display:grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 2rem\n  }\n`;\n\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`\nconst Heading = styled.h1`\n  font-family: 'Bebas Neue', cursive;\n  color: #FFF;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-bottom: 50px;\n  margin-top: 80px;\n\n  &::after {\n    content: '';\n    width: 100px;\n    height: 6px;\n    background-color: #66A2FE;\n    display: block;\n\n  }\n\n`\n\nfunction App() {\n\n  const [moneda, guardarMoneda] = useState('');\n  const [criptomoneda, guardarCriptomoneda] = useState('');\n  const [resultado, guardarResultado] = useState({});\n  const [cargando, guardarCargando] = useState(false);\n\n  useEffect (() => {\n\n    const cotizarCriptomoneda = async () => {\n      // Evitamos la ejecución la primera vez\n      if (moneda === '') return;\n\n      console.log('Cotizando...');\n\n      // Consultar la api para obtener cotización\n\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n\n      const resultado = await axios.get(url);\n\n      // mostrar el spinner\n\n      guardarCargando(true);\n\n      // ocultar el spinner y mostrar el resultado\n\n      setTimeout(() => {\n        guardarCargando(false);\n\n\n        // guardar cotizacion\n\n        guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n      }, 3000);\n    }\n\n    cotizarCriptomoneda();\n    \n\n  }, [moneda, criptomoneda])\n\n\n  // Mostrar Spinner o Resultado\n\n  const componente = (cargando) ? <Spinner/> : <Cotizacion resultado={resultado}/>  \n\n  return (\n    <Contenedor>\n      <div>\n        <Imagen \n        src={imagen}\n        alt=\"Imagen Criptomonedas\"\n        />\n      </div>\n      <div>\n        <Heading>Cotizador de Criptomonedas</Heading>\n        <Formulario\n          guardarMoneda={guardarMoneda}\n          guardarCriptomoneda={guardarCriptomoneda}\n        />\n\n        {componente}\n\n      </div>\n      \n    </Contenedor>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}